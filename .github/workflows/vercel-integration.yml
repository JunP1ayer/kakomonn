name: Vercel Integration Check

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  pre-deployment:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build and test
      run: |
        echo "🔨 Building Next.js application..."
        npm run build
        echo "✅ Build completed successfully"
        
        echo "🧹 Running linter..."
        npm run lint
        echo "✅ Linting completed"
        
    - name: Check for styled-jsx issues
      run: |
        echo "🔍 Checking for client component directives..."
        
        # Check if all files using styled-jsx have 'use client'
        files_with_styled_jsx=$(find src -name "*.tsx" -exec grep -l "styled jsx" {} \; 2>/dev/null || true)
        
        if [ -n "$files_with_styled_jsx" ]; then
          echo "Files using styled-jsx found:"
          echo "$files_with_styled_jsx"
          
          for file in $files_with_styled_jsx; do
            if ! grep -q "'use client'" "$file"; then
              echo "❌ $file uses styled-jsx but missing 'use client' directive"
              exit 1
            else
              echo "✅ $file has proper 'use client' directive"
            fi
          done
        else
          echo "✅ No styled-jsx usage detected or all files properly configured"
        fi

  post-deployment:
    runs-on: ubuntu-latest
    needs: pre-deployment
    
    steps:
    - name: Wait for Vercel deployment
      run: |
        echo "⏳ Waiting for Vercel deployment (90 seconds)..."
        sleep 90
        
    - name: Comprehensive site check
      run: |
        echo "🌐 Checking deployment status..."
        
        base_url="https://kakomonn-com.vercel.app"
        
        check_page() {
          local url=$1
          local name=$2
          
          echo "Checking $name at $url"
          
          response=$(curl -s -o /dev/null -w "%{http_code}" "$url")
          
          if [ $response -eq 200 ]; then
            echo "✅ $name: HTTP $response - OK"
            return 0
          else
            echo "❌ $name: HTTP $response - FAILED"
            return 1
          fi
        }
        
        # Check all pages
        failed=0
        
        check_page "$base_url" "Landing Page" || failed=1
        check_page "$base_url/threads" "Threads List" || failed=1  
        check_page "$base_url/threads/1" "Thread Detail" || failed=1
        check_page "$base_url/upload" "Upload Form" || failed=1
        
        if [ $failed -eq 0 ]; then
          echo ""
          echo "🎉 All deployment checks passed!"
          echo "🚀 Site is fully operational at: $base_url"
        else
          echo ""
          echo "💥 Deployment verification failed!"
          echo "Some pages are not responding correctly"
          exit 1
        fi
        
    - name: Performance check
      run: |
        echo "⚡ Basic performance check..."
        
        start_time=$(date +%s%N)
        curl -s https://kakomonn-com.vercel.app/ > /dev/null
        end_time=$(date +%s%N)
        
        duration=$(( (end_time - start_time) / 1000000 ))
        echo "🕒 Landing page load time: ${duration}ms"
        
        if [ $duration -lt 3000 ]; then
          echo "✅ Performance: Good (< 3s)"
        elif [ $duration -lt 5000 ]; then
          echo "⚠️ Performance: Acceptable (< 5s)"  
        else
          echo "❌ Performance: Slow (> 5s)"
        fi